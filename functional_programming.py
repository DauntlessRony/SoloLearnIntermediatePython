####################################################################
####################################################################
# Start Functional Programming
#-------------------------------------------------------------------
def apply_twice(func, arg): # func = add_five function and arg = 10 for the first call
    return func(func(arg))  # func(arg) = add_five(10); so, it goes to add_five function and return 15
                            # and lastly func(func(arg)) = func(15); and it goes to add_finction and return 20
def add_five(x):
    return x + 5

print(apply_twice(add_five, 10))
#-------------------------------------------------------------------
def test(func, arg):
  return func(func(arg))

def mult(x):
  return x * x

print(test(mult, 2))
#-------------------------------------------------------------------
def pure_function(x, y):
  temp = x + 2*y
  print(temp)
  temp2 = 2*x + y
  print(temp2)
  return temp / temp2

print(pure_function(2, 3))

some_list = []

def impure(arg):
  some_list.append(arg)

impure(range(12))
print(some_list)
#-------------------------------------------------------------------
def func(x):
  y = x**2
  z = x + y
  return z

#-------------------------------------------------------------------
nums = (55, 44, 33, 22)
print(max(min(nums[:2]), abs(-42)))
#-------------------------------------------------------------------
n = [2, 4, 6, 8]
res = 1
for x in n[1:3]:
  res *= x

print(res)
# End Functional Programming
#-------------------------------------------------------------------
####################################################################
####################################################################
# Start Lambda

price = int(input())
perc = int(input())

res = (lambda x,y:(y/100)*x)(price, perc)

print(res)


# End Lambda
####################################################################
####################################################################
# Start map & filter
def add_five(x):
    return x + 5

nums = [11, 22, 33, 44, 55]
result = list(map(add_five, nums))
print(result)

nums = [11, 22, 33, 44, 55]
res = list(filter(lambda x: x%2==0, nums))
print(res)
# End map & filter
####################################################################
####################################################################
# Start Generators

# return vs yield
# yield
def countdown():
    i=5
    while i > 0:
        yield i
        i -= 1

for i in countdown(): # in that position, for loop access the local variable of coundown function;
    print(f' using yield {i}')

def countdown():
    i=5
    while i > 0:
        print(f' using return {i}')
        i -= 1
    return i

countdown() # if we use return, we cannot access the local variable from other functions;


def numbers(x):
    for i in range(x):
        if i % 2 == 0:
            yield i
for i in numbers(11):
    print(i)
print(list(numbers(11)))

# End Generators
####################################################################
####################################################################
# Start prime numbers

# prime numbers
def isPrime(x):
    if x < 2:
        return False
    elif x == 2:
        return True
    for n in range(2, x):
        if x % n ==0:
            return False
    return True

def primeGenerator(a, b):
    for i in range(a,b):
        print(f'The value of i inside for loop {i}.')
        if isPrime(i):
            print(f'The value of i after isPrime call {i}.')
            print(f'The value of i before yield call {i}.')
            yield i
            print(f'The value of i after yield call {i}.')
            i +=1

# f = int(input())
# t = int(input())

print(list(primeGenerator(10, 20)))

# End prime numbers
####################################################################
####################################################################
# Start Decorators



# End Decorators
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################
####################################################################
# Start codeA



# End codeA
####################################################################